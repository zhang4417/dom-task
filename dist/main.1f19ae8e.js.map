{"version":3,"sources":["main.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","key","each","nodeList","fn","i","div","console","log","divList","n"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACTC,EAAAA,IADS,gBACJC,QADI,EACMC,KADN,EACa;AAClB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACH,GAHQ;AAITI,EAAAA,KAJS,iBAIHC,IAJG,EAIGC,IAJH,EAISC,KAJT,EAIgB;AACrB,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACH,KAFD,MAEO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,UAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACH,OAFD,MAEO,IAAIA,IAAI,YAAYI,MAApB,EAA4B;AAC/B,aAAK,IAAIC,GAAT,IAAgBL,IAAhB,EAAsB;AAClB,iBAAOD,IAAI,CAACD,KAAL,CAAWO,GAAX,IAAkBL,IAAI,CAACK,GAAD,CAA7B;AACH;AACJ;AACJ;AACJ,GAhBQ;AAiBTC,EAAAA,IAjBS,gBAiBJC,QAjBI,EAiBMC,EAjBN,EAiBU;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACJ,MAA7B,EAAqCM,CAAC,EAAtC,EAA0C;AACtCD,MAAAA,EAAE,CAACD,QAAQ,CAACE,CAAD,CAAT,CAAF,CADsC,CAEtC;AACH;AACJ;AAtBQ,CAAb;AAyBA,IAAIC,GAAG,GAAGlB,GAAG,CAACC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAV;AACAkB,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAlB,GAAG,CAACM,KAAJ,CAAUY,GAAV,EAAe,OAAf,EAAwB,KAAxB;AACA,IAAMG,OAAO,GAAGrB,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAhB;AACAD,GAAG,CAACc,IAAJ,CAASO,OAAT,EAAkB,UAACC,CAAD;AAAA,SAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAAP;AAAA,CAAlB,GACA;AACA;AAEA;AACA","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                for (let key in name) {\r\n                    return node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn(nodeList[i])\r\n            //fn.call(null,nodeList[i])\r\n        }\r\n    }\r\n}\r\n\r\nlet div = dom.find('#test>.red')[0]\r\nconsole.log(div)\r\ndom.style(div, 'color', 'red')\r\nconst divList = dom.find('.red')\r\ndom.each(divList, (n) => console.log(n))\r\n// const div = dom.find('#test>.red')[0] // 获取对应的元素\r\n// dom.style(div, 'color', 'red') // 设置 div.style.color\r\n\r\n// const divList = dom.find('.red') // 获取多个 div.red 元素\r\n// dom.each(divList, (n) => console.log(n)) // 遍历 divList 里的所有元素"]}